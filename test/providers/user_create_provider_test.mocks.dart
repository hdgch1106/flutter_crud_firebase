// Mocks generated by Mockito 5.4.4 from annotations
// in crud_firebase/test/providers/user_create_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:crud_firebase/features/users/domain/domain.dart' as _i2;
import 'package:crud_firebase/features/users/infrastructure/infrastructure.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserDatasource_0 extends _i1.SmartFake
    implements _i2.UserDatasource {
  _FakeUserDatasource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepositoryImpl extends _i1.Mock
    implements _i3.UserRepositoryImpl {
  @override
  _i2.UserDatasource get datasource => (super.noSuchMethod(
        Invocation.getter(#datasource),
        returnValue: _FakeUserDatasource_0(
          this,
          Invocation.getter(#datasource),
        ),
        returnValueForMissingStub: _FakeUserDatasource_0(
          this,
          Invocation.getter(#datasource),
        ),
      ) as _i2.UserDatasource);

  @override
  _i4.Future<void> createUser(
    String? firstName,
    String? lastName,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [
            firstName,
            lastName,
            email,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> editUser(
    String? id,
    String? firstName,
    String? lastName,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editUser,
          [
            id,
            firstName,
            lastName,
            email,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.UserEntity>> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i4.Future<List<_i2.UserEntity>>.value(<_i2.UserEntity>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.UserEntity>>.value(<_i2.UserEntity>[]),
      ) as _i4.Future<List<_i2.UserEntity>>);
}
